# baseURI: http://loci.example.org
# imports: http://linked.data.gov.au/def/geox
# imports: http://linked.data.gov.au/def/loci
# imports: http://qudt.org/2.1/schema/qudt
# imports: http://w3id.org/lindt/custom_datatypes
# imports: http://www.opengis.net/ont/geosparql
# prefix: ex

@prefix cdt: <http://w3id.org/lindt/custom_datatypes#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix ex: <http://loci.example.org#> .
@prefix geo: <http://www.opengis.net/ont/geosparql#> .
@prefix geox: <http://linked.data.gov.au/def/geox#> .
@prefix loci: <http://linked.data.gov.au/def/loci#> .
@prefix my: <http://example.org/loci-test/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

my:FA
  a loci:Feature ;
.
my:FA-FB
  a loci:LinkingStatement ;
  rdf:object my:FB ;
  rdf:predicate dcterms:relation ;
  rdf:subject my:FA ;
.
my:FB
  a loci:Feature ;
.
my:FB-FC
  a loci:LinkingStatement ;
  rdf:object my:FC ;
  rdf:predicate dcterms:relation ;
  rdf:subject my:FB ;
.
my:FC
  a loci:Feature ;
.
my:FC-FD
  a loci:LinkingStatement ;
  rdf:object my:FD ;
  rdf:predicate dcterms:relation ;
  rdf:subject my:FC ;
.
my:FD
  a loci:Feature ;
.
my:FD-FE
  a loci:LinkingStatement ;
  rdf:object my:FE ;
  rdf:predicate dcterms:relation ;
  rdf:subject my:FD ;
.
my:FE
  a loci:Feature ;
.
my:Feature10
  a loci:Feature ;
.
my:Feature12
  a loci:Feature ;
.
my:Feature67
  a loci:Feature ;
.
my:Feature78
  a loci:Feature ;
.
my:Link56
  a loci:LinkingStatement ;
  loci:hadGenerationMethod my:manual-inspection ;
  loci:isMemberOf my:Linkset34 ;
  loci:recordLifecycle [
      a time:Interval ;
      time:hasBeginning [ time:inXSDDate "2021-02-19"^^xsd:date ; ] ;
    ] ;
  loci:resourceLifecycle [
      a time:Interval ;
      time:hasBeginning my:t89-56 ;
    ] ;
  rdf:object my:Feature12 ;
  rdf:predicate loci:isWithin ;
  rdf:subject my:Feature78 ;
.
my:Link56_1
  a loci:LinkingStatement ;
  loci:hadGenerationMethod my:manual-inspection ;
  loci:isMemberOf my:Linkset34 ;
  loci:recordLifecycle [
      a time:Interval ;
      time:hasBeginning [ time:inXSDDate "2021-02-19"^^xsd:date ; ] ;
    ] ;
  loci:resourceLifecycle [
      a time:Interval ;
      time:hasBeginning my:t-89 ;
    ] ;
  rdf:object my:Feature10 ;
  rdf:predicate loci:isWithin ;
  rdf:subject my:Feature78 ;
.
my:Link89
  a loci:LinkingStatement ;
  loci:hadGenerationMethod my:manual-inspection ;
  loci:isMemberOf my:Linkset34 ;
  loci:recordLifecycle [
      a time:Interval ;
      time:hasBeginning [ time:inXSDDate "2021-02-17"^^xsd:date ; ] ;
      time:hasEnd  [ time:inXSDDate "2021-02-19"^^xsd:date ; ] ;
      dcterms:isReplacedBy my:Link56 ;
    ] ;
  loci:resourceLifecycle [
      a time:Interval ;
      time:hasBeginning my:t-89 ;
      time:hasEnd my:t89-56 ;
    ] ;
  rdf:object my:Feature67 ;
  rdf:predicate loci:isWithin ;
  rdf:subject my:Feature78 ;
  rdfs:comment "This is an example where the replacement link starts later. This would correspond to changes in-the-world." ;
.
my:Link89_1
  a loci:LinkingStatement ;
  loci:hadGenerationMethod my:manual-inspection ;
  loci:isMemberOf my:Linkset34 ;
  loci:recordLifecycle [
      a time:Interval ;
      time:hasBeginning [ time:inXSDDate "2021-02-17"^^xsd:date ; ] ;
      time:hasEnd  [ time:inXSDDate "2021-02-19"^^xsd:date ; ] ;
      dcterms:isReplacedBy my:Link56_1 ;
    ] ;
  loci:resourceLifecycle [
      a time:Interval ;
      time:hasBeginning my:t-89 ;
      time:hasEnd my:t-89 ;
    ] ;
  rdf:object my:Feature67 ;
  rdf:predicate loci:isWithin ;
  rdf:subject my:Feature78 ;
  rdfs:comment "This is an example where the replacement link has the same start-date. This corresponds to a change of knowledge?" ;
.
my:Linkset34
  a loci:Linkset ;
.
my:manual-inspection
  a prov:Plan ;
  rdfs:comment "Manual inspection" ;
.
my:t-89
  a time:Instant ;
  time:inXSDDate "2021-02-01"^^xsd:date ;
.
my:t89-56
  a time:Instant ;
  time:inXSDDate "2021-02-10"^^xsd:date ;
.
<http://loci.example.org>
  a owl:Ontology ;
  owl:imports <http://linked.data.gov.au/def/geox> ;
  owl:imports <http://linked.data.gov.au/def/loci> ;
  owl:imports <http://qudt.org/2.1/schema/qudt> ;
  owl:imports <http://w3id.org/lindt/custom_datatypes> ;
  owl:imports <http://www.opengis.net/ont/geosparql> ;
  skos:note """Need to figure out how to query chains of relations. 
Here's a start with SPARQL: 
SELECT *
WHERE {
#	?s a loci:LinkingStatement . 
	?s rdf:subject ?n ; rdf:object my:FE .
}""" ;
.
ex:G987
  a geo:Geometry ;
  geox:hasResolution "30 m"^^cdt:ucum ;
.
